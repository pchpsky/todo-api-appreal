openapi: 3.0.3
info:
  title: Todo's API
  version: 0.0.1
servers:
  - url: 'http://127.0.0.1:8080'
paths:
  /todos:
    get:
      summary: List of all Todos
      description: List of all Todos
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  todos:
                    type: array
                    items:
                      $ref: '#/components/schemas/Todo'
                required:
                  - todos
    post:
      summary: Create a new Todo
      description: Create a new Todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoRequest'
      responses:
        '200':
          description: Todo successfuly created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Body is not a valid JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Todo data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /todos/{todoId}:
    get:
      summary: Request single Todo
      description: Request single Todo
      parameters:
        - {$ref: '#/components/parameters/todoId'}
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a Todo
      description: Update a Todo
      parameters:
        - {$ref: '#/components/parameters/todoId'}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoRequest'
      responses:
        '200':
          description: Todo successfuly updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Body is not a valid JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Todo data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a Todo
      description: Delete a Todo
      parameters:
        - {$ref: '#/components/parameters/todoId'}
      responses:
        '200':
          description: Todo successfuly deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /todos/{todoId}/complete:
    post:
      summary: Complete a Todo
      description: Complete a Todo
      parameters:
        - {$ref: '#/components/parameters/todoId'}
      responses:
        '200':
          description: Todo successfuly completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  parameters:
    todoId:
      name: todoId
      in: path
      description: ID of Todo
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    TodoRequest:
      type: object
      properties:
        title:
          type: string
        completed:
          type: boolean
      required:
        - title
    Todo:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        completed:
          type: boolean
      required:
        - id
        - title
        - completed
    Error:
      type: object
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
      required:
        - message
